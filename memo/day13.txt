다중 상속
	여러 부모 클래스를 상속하는 다중상속은 모호성이 생겨 JAVA에서는 지원하지 않음
	->jdk8버전 부터는 인터페이스에 default, static메소드 선언 가능 -> 여러 개를 지정할 수 있는 인터페이스 특성상 다중 상속을 지원하는것이나 다름이 없다.

	모호성(ambiguity) 
		하나의 자식이 여러 부모를 상속받을 때 부모필드에 동일한 이름의 필드가 있다면, 어떤 부모의 필드인지 알 수가 없다.
		
		인터페이스 여러개의 충돌
		부모명.super.메소드명 으로 원하는 부모의 메소드를 오버라이딩해서 해결
		
		인터페이스와 부모클래스의 충돌
		항상 부모클래스의 메소드가 실행됨


	default -> abstract붙이지 말라는 일종의 기본메소드임을 알려줌 ->접근권한제어자?	
	인터페이스 메소드 -> default, static , abstract 세개중에 한개만 쓸 수 있음 		

==============================================================================
함수형 인터페이스
	추상메소드를 단 한개만 가지고 있는 인터페이스
	@FunctionalInterface
	추상메소드를 단 한개만 선언하게 해주는 어노테이션

람다식
	함수형 인터페이스에서는 한 개의 추상메소드만 존재하기 때문에 구현 시 메소드 이름이 딱히 필요가 없다.
	이름이 없는 메소드로서 익명메소드라 하고 값처럼 사용이 가능하며, 매개변수로도 전달이 가능하다.
	
람다식 문법
	1.(매개변수 형식 나열,) -> 리턴값;
	2.(매개변수 형식 나열, ..) -> {2개 이상의 문장 작성; return 리턴값;}
	매개변수 1개일때는 소괄호 생략가능
	문장이 1개일경우 중괄호와 세미콜론 생략가능
	

===========================================================================
[심화 실습]
여러 개의 정수를 입력받아서 알맞는 덧셈, 뺄셈 결과를 확인하는 애플리케이션 제작

입력 예1) 7 + 35 - 9
출력 예1) 33

입력 예2) -9 + 8 + 10
출력 예2) 9

* "ABC".split("")은 [A][B][C] 3칸 문자열 배열로 리턴된다.
   "A,B,C".split(",")은 [A][B][C] 3칸 문자열 배열로 리턴된다.
   split("구분점")을 전달하면 문자열에서 동일한 구분점을 기준으로 문자열 값을 잘라낸 후 문자열 배열로 리턴한다.
   구분점을 여러 개 사용할 때에는 split("구분점|구분점")으로 사용하며, "+", "-"를 구분점으로 사용할 때에는 "\\+", "\\-"로 표현한다.
   예)"4 + 9".split("\\+")은 [4][9] 2칸 문자열 배열로 리턴

* 사용자가 정상적으로만 입력한다는 가정 하에 구현하도록 한다.
* 두 정수를 전달받은 후 int로 리턴하는 calc 추상메소드 선언(함수형 인터페이스 제작) - Calc
* 두 정수의 덧셈, 뺄셈을 구해주는 함수형 인터페이스를 리턴하는 static 메소드 선언(람다식 리턴)
* 전체 식을 전달받은 후 String[]로 리턴하는 getOpers 추상메소드 선언(함수형 인터페이스 제작) - OperCheck
* main메소드에 getOpers를 람다식으로 구현 - MyMath(메인 메소드 선언)
* 첫번째 정수가 음수일 경우 오류 해결



	