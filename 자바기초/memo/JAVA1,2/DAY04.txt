비트 연산
	논리 연산자
		&	(and,논리 곱) : a&b, 두 비트 모두 1이면 1 
		|	(or, 논리 합) : a|b, 두비트 중 하나라도 1이면 1
		^	(xor, 배타 논리합) : a ^ b : 두 비트가 서로 다르면 1
	단항 연산자
		~	(not, 논리부정) : ~a, 0은 1 로 1은 0으로 변경
						~a = -a-1
					(~10 = -11)

	쉬프트 연산자
		<<	(left shift,좌쉬프트) : a << b, A를 B만큼 좌로 이동	곱하기 2
		>>	(right shift 우쉬프트) : a>>b, a를 b만큼 우로 이동	나누기2 나머지는 버림

	
		- 빈 칸은 양수일 때는 0으로, 음수 일때는 1로 채워진다.

부호비트
	-최상위 비트 (제일 왼쪽) 
		0이면 양수 / 1이면 음수


조건식 
	결과가 참 또는 거짓, 둘 중 하나가 나오는식

관계 연산자
		==	:같다
		!=	:같지 않다.
		>,<	:초과, 미만
		>=,<=:이상, 이하

논리 연산자
	&&(and) : A && B, 두 조건식 모두 참이면 참
	||(or) : A||B, 두 조건식 중 하나라도 참이면 참


단항 연산자
	!(not) : !A, 조건식이 참이면 거짓으로, 거짓이면 참으로 변경
		true를 false, false를 true


삼항 연산자( ? : ) 
	조건식 ? 참일때의 값 : 거짓일 때의 값
	10>9 ?       10        :        9
	단, 참과 거짓 자리에 값만 작성할 수 있다.



커서 바로 다음줄로 내리기 shift + enter

제어문 : 코드에 진행방향을 제어한다.
	-조건문
		if문
			if(조건식) {
				실행할 문장;
			}
			if(조건식) {
				실행할 문장;
			}
			if(조건식) {
				실행할 문장;
			}
								모든 조건을 다 확인해 봐야할 때
==================================================================================
			if(조건식) {
					실행할문장;
			} else if(조건식) {
					실행할문장;
			}else {
					실행할문장;
			}

							조건식이 하나만 참이여도 괜찮은경우
		switch문
