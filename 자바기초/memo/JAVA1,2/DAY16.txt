알고리즘
	어떤 문제가 발생되었을 때 해결할 수 있는 절차 혹은 순서

자료구조
	의미 없는 데이터를 하나의 정보로 만들어주는 알고리즘들의 집합
	수집한 자료를 저장하는 방법

컬렉션 프레임워크 : 미리 효율적으로 데이터를 관리하는 자료구조를 만들어 제공
	많은 데이터를 쉽고 효과적으로 관리할 수 있는 표준화된 방법을 제공하는 클래스들의 집합.

1.List 인터페이스
	데이터의 순서를 보장한다.
	중복된 값을 허용한다.

	-List 구현 클래스
	1.vector : 용량 관리, 보안성 강화, 처리량 감소
			->예전에 사용하던 클래스, 지금은 사용하지 않는다.(자바 기준)
	2.LinkedList : 추가, 삭제는 빠르지만 탐색이 상대적으로 느리다.
	3.ArrayList : 배열과 동일하게 인덱스로 데이터를 관리한다.
			컬렉션 클래스 중 실무에서 가장 많이 사용되는 클래스이다.
			추가,삭제는 상대적으로 느리지만 탐색이 빠르다.

		-배열과 ArrayList의 차이
		배열은 길이에 제한을 두어야 할 때 자주 사용되고, ArrayList는 몇 개의 데이터가 들어올 지 알 수 없을 때 사용한다.
		
제네릭<>
클래스 뒤에 꺽새로 타입을 제안한다.

제네릭을 사용하는 이유?
1. 제네릭을 사용하지 않는다면 필드의 타입별로 클래스를 만들어야한다.
2. 제네릭 대신 Object타입을 사용하면 다운캐스팅을 해야한다. -> 불편하다.
3. 제네릭은 타입을 제한할 수 있다.(Object는 모든 타입을다 받는다.)

2.Set  인터페이스

3.Map 인터페이스
