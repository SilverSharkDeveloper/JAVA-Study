상속(inheritance)
	1.기존에 선언된 클래스의 맴버(생성자는 제외)를 새롭게 만들 클래스에서 사용하고 싶을 때 상속을 받고 새로운 기능만 추가한다.
	2.여러 클래스 선언 시 맴버가 겹치는 경우, 부모 클래스를 먼저 선언하고 공통 맴버를 자식 클래스들에게 상속해준다.
	
상속 문법
	class Parents{
		Parents맴버....
	}

	class Child extends Parents{
		Parents 맴버...
		Child 맴버....
	}
 
- parents : 부모클래스, 슈퍼 클래스, 기반 클래스, 상위 클래스
- child : 자식클래스, 서브 클래스, 파생 클래스, 하위 클래스

-주의사항
	자바에서는 상속을 단일상속만 지원한다.

super	: 부모의 참조값
	부모의 맴바에 접근할 때 사용한다.
super() : 부모 생성자
	자식 클래스 타입의 객체로 부모 필드에 접근할 수 있다.
	우리는 객체를 만들 때 자식 생성자만 호출하기 때문에, 자식 필드만 메모리에 할당된다고 생각할 수 있다.
	그러나 자식 생성자는 항상 부모 생성자를 호출한다.
	즉,자식객체를 생성하게 되면 부모 객체도 생성하게 된다.
	super()를 작성하지 않더라도 컴파일러가 자동으로 작성해준다.


다형성
	1.오버로딩(메소드, 생성자)
	2.오버라이딩(재정의)
	부모 클래스에 정의한 메소드를 자식 클래스에서 수정해서 사용하고 싶다면 오버라이딩(재정의)를 하면 된다.
	이때 메소드명, 매개변수, 반환타입은 부모의 메소드와 똑같아야 한다.(내용만 변경한다)

오버로딩과 오버라이딩 차이
	1.오버로딩 - 같은 클래스 내에서 생성자 또는 메소드를 같은 이름으로 매개변수의 타입이나 수만 다르게 만든다.
	(반환타입은 오버로딩에 영향을 주지 못한다.)
	2.오버라이딩 - 상속 관계를 맺은 자식클래스에서 부모클래스의 메소드를 재정의 한다. 반환타입, 이름 , 매개변수까지 모두 동일해야 한다.


접근 권한 제어자(접근자)	- Access Modifier	
	주로 클래스의 맴버에 접근을 제어하기 위해 사용한다.

	1.public : 모든 곳에서 접근 가능, 대표 클래스를 의미할 때 사용
	2.protected : 다른 패키지에서 접근 불가, 자식은 허용
	3.default : 다른 패키지에서 접근 불가
	(별도로 명시하지 않고 접근제어자 생략시 자동으로 default가 됨)
	4.private : 다른 클래스에서 접근 불가, 메소드로만 접근가능
		(getter, setter)


Casting
	up casting : 자식 값을 부모 타입으로 형변환
	down casting : 이미 up casting이 된 값을 다시 자식 타입으로 형변환





오버로딩에 내용은 달라도 되는가?
오버라이딩할때 같은 이름으로 메소드를 만들면 만들어 지지않나?

상속받은 객체는 부모에 필드가 새로 생성되는것?

private는 객체를 만들어도 사용불가 (접근불가)

import 

return 메소드 값이 없어도 사용가능 종료 목적
